{"ast":null,"code":"export default {\n  data() {\n    return {\n      photo: {\n        id: null,\n        name: '',\n        url: ''\n      },\n      selectedSize: 'S',\n      selectedQuantity: 1,\n      sizeOptions: [{\n        label: 'Small (20 cm) - $20',\n        value: 'S'\n      }, {\n        label: 'Medium (40 cm) - $40',\n        value: 'M'\n      }, {\n        label: 'Large (60 cm) - $60',\n        value: 'L'\n      }]\n    };\n  },\n  mounted() {\n    // Fetch photo details when the component is mounted\n    this.fetchPhotoDetails();\n  },\n  methods: {\n    fetchPhotoDetails() {\n      // Replace 'photoId' with the actual ID of the photo you want to fetch\n      const photoId = 1; // Change this to the ID of the photo you want to fetch\n      fetch(`http://127.0.0.1:5001/photos/${photoId}`).then(response => response.json()).then(data => {\n        // Update the 'photo' data property with the fetched details\n        this.photo = {\n          id: data.photo.id,\n          name: data.photo.name,\n          url: data.photo.url\n        };\n      }).catch(error => {\n        console.error('Error fetching photo details:', error);\n      });\n    },\n    addToCart() {\n      // Prepare data for the request\n      const data = {\n        photo_id: this.photo.id,\n        size: this.selectedSize,\n        quantity: this.selectedQuantity\n      };\n\n      // Prepare headers for the request\n      const headers = {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.$store.state.authToken}`\n      };\n\n      // Prepare the request configuration\n      const requestOptions = {\n        method: 'POST',\n        headers: headers,\n        body: JSON.stringify(data)\n      };\n\n      // Make the fetch request\n      fetch('http://127.0.0.1:5002/cart/add', requestOptions).then(response => response.json()).then(data => {\n        // Handle successful response\n        console.log('Success:', data);\n        // You may want to update the UI or show a success message here\n      }).catch(error => {\n        // Handle error\n        console.error('Error:', error);\n        // You may want to update the UI or show an error message here\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","photo","id","name","url","selectedSize","selectedQuantity","sizeOptions","label","value","mounted","fetchPhotoDetails","methods","photoId","fetch","then","response","json","catch","error","console","addToCart","photo_id","size","quantity","headers","$store","state","authToken","requestOptions","method","body","JSON","stringify","log"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\ImageDetailView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-custom-color dark:bg-gray-800 min-h-screen py-8\">\r\n    <div class=\"photo-detail flex justify-center items-center\">\r\n      <div class=\"w-1/2 pr-8\">\r\n        <img :src=\"photo.url\" :alt=\"photo.name\" class=\"w-2/3 h-auto rounded-md\">\r\n      </div>\r\n\r\n      <div class=\"w-1/2 pl-8\">\r\n        <h1 class=\"text-2xl font-bold mb-4\">{{ photo.name }}</h1>\r\n\r\n        <form @submit.prevent=\"addToCart\" class=\"mt-4\">\r\n          <label for=\"size\" class=\"block text-sm font-medium text-gray-700\">Select Size:</label>\r\n          <select v-model=\"selectedSize\" name=\"size\" id=\"size\" class=\"mt-1 p-2 border rounded-md w-full\">\r\n            <option v-for=\"sizeOption in sizeOptions\" :key=\"sizeOption.value\" :value=\"sizeOption.value\">\r\n              {{ sizeOption.label }}\r\n            </option>\r\n          </select>\r\n\r\n          <label for=\"quantity\" class=\"block text-sm font-medium text-gray-700 mt-4\">Quantity:</label>\r\n          <input v-model=\"selectedQuantity\" type=\"number\" name=\"quantity\" min=\"1\" class=\"mt-1 p-2 border rounded-md w-full\">\r\n\r\n          <button type=\"submit\" class=\"mt-4 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">\r\n            Add to Cart\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      photo: {\r\n        id: null,\r\n        name: '',\r\n        url: '',\r\n      },\r\n      selectedSize: 'S',\r\n      selectedQuantity: 1,\r\n      sizeOptions: [\r\n        { label: 'Small (20 cm) - $20', value: 'S' },\r\n        { label: 'Medium (40 cm) - $40', value: 'M' },\r\n        { label: 'Large (60 cm) - $60', value: 'L' },\r\n      ],\r\n    };\r\n  },\r\n\r\n  mounted() {\r\n    // Fetch photo details when the component is mounted\r\n    this.fetchPhotoDetails();\r\n  },\r\n\r\n  methods: {\r\n    fetchPhotoDetails() {\r\n      // Replace 'photoId' with the actual ID of the photo you want to fetch\r\n      const photoId = 1; // Change this to the ID of the photo you want to fetch\r\n      fetch(`http://127.0.0.1:5001/photos/${photoId}`)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // Update the 'photo' data property with the fetched details\r\n          this.photo = {\r\n            id: data.photo.id,\r\n            name: data.photo.name,\r\n            url: data.photo.url,\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching photo details:', error);\r\n        });\r\n    },\r\n\r\n    addToCart() {\r\n      // Prepare data for the request\r\n      const data = {\r\n        photo_id: this.photo.id,\r\n        size: this.selectedSize,\r\n        quantity: this.selectedQuantity,\r\n      };\r\n\r\n      // Prepare headers for the request\r\n      const headers = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${this.$store.state.authToken}`,\r\n      };\r\n\r\n      // Prepare the request configuration\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: headers,\r\n        body: JSON.stringify(data),\r\n      };\r\n\r\n      // Make the fetch request\r\n      fetch('http://127.0.0.1:5002/cart/add', requestOptions)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          // Handle successful response\r\n          console.log('Success:', data);\r\n          // You may want to update the UI or show a success message here\r\n        })\r\n        .catch((error) => {\r\n          // Handle error\r\n          console.error('Error:', error);\r\n          // You may want to update the UI or show an error message here\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA+BA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;QACLC,EAAE,EAAE,IAAI;QACRC,IAAI,EAAE,EAAE;QACRC,GAAG,EAAE;MACP,CAAC;MACDC,YAAY,EAAE,GAAG;MACjBC,gBAAgB,EAAE,CAAC;MACnBC,WAAW,EAAE,CACX;QAAEC,KAAK,EAAE,qBAAqB;QAAEC,KAAK,EAAE;MAAI,CAAC,EAC5C;QAAED,KAAK,EAAE,sBAAsB;QAAEC,KAAK,EAAE;MAAI,CAAC,EAC7C;QAAED,KAAK,EAAE,qBAAqB;QAAEC,KAAK,EAAE;MAAI,CAAC;IAEhD,CAAC;EACH,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EAEDC,OAAO,EAAE;IACPD,iBAAiBA,CAAA,EAAG;MAClB;MACA,MAAME,OAAM,GAAI,CAAC,EAAE;MACnBC,KAAK,CAAE,gCAA+BD,OAAQ,EAAC,EAC5CE,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACf,IAAG,IAAK;QACZ;QACA,IAAI,CAACC,KAAI,GAAI;UACXC,EAAE,EAAEF,IAAI,CAACC,KAAK,CAACC,EAAE;UACjBC,IAAI,EAAEH,IAAI,CAACC,KAAK,CAACE,IAAI;UACrBC,GAAG,EAAEJ,IAAI,CAACC,KAAK,CAACG;QAClB,CAAC;MACH,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC;IAEDE,SAASA,CAAA,EAAG;MACV;MACA,MAAMrB,IAAG,GAAI;QACXsB,QAAQ,EAAE,IAAI,CAACrB,KAAK,CAACC,EAAE;QACvBqB,IAAI,EAAE,IAAI,CAAClB,YAAY;QACvBmB,QAAQ,EAAE,IAAI,CAAClB;MACjB,CAAC;;MAED;MACA,MAAMmB,OAAM,GAAI;QACd,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAAS,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,SAAU;MACzD,CAAC;;MAED;MACA,MAAMC,cAAa,GAAI;QACrBC,MAAM,EAAE,MAAM;QACdL,OAAO,EAAEA,OAAO;QAChBM,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACjC,IAAI;MAC3B,CAAC;;MAED;MACAc,KAAK,CAAC,gCAAgC,EAAEe,cAAc,EACnDd,IAAI,CAACC,QAAO,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,EAChCF,IAAI,CAACf,IAAG,IAAK;QACZ;QACAoB,OAAO,CAACc,GAAG,CAAC,UAAU,EAAElC,IAAI,CAAC;QAC7B;MACF,CAAC,EACAkB,KAAK,CAAEC,KAAK,IAAK;QAChB;QACAC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;QAC9B;MACF,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}