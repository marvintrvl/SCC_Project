{"ast":null,"code":"import { createElementVNode as _createElementVNode, withModifiers as _withModifiers, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"mb-4\\\"><label for=\\\"first_name\\\" class=\\\"text-white block mb-2\\\">First Name:</label><input id=\\\"first_name\\\" name=\\\"first_name\\\" class=\\\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\\\"></div><div class=\\\"mb-4\\\"><label for=\\\"last_name\\\" class=\\\"text-white block mb-2\\\">Last Name:</label><input id=\\\"last_name\\\" name=\\\"last_name\\\" class=\\\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\\\"></div><div class=\\\"mb-4\\\"><label for=\\\"email\\\" class=\\\"text-white block mb-2\\\">Email:</label><input id=\\\"email\\\" name=\\\"email\\\" type=\\\"email\\\" class=\\\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\\\"></div><div class=\\\"mb-4\\\"><label for=\\\"password\\\" class=\\\"text-white block mb-2\\\">Password:</label><input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" class=\\\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\\\"></div><div class=\\\"mb-4\\\"><label for=\\\"street\\\" class=\\\"text-white block mb-2\\\">Street:</label><input id=\\\"street\\\" name=\\\"street\\\" class=\\\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\\\"></div><div class=\\\"mb-4\\\"><label for=\\\"city\\\" class=\\\"text-white block mb-2\\\">City:</label><input id=\\\"city\\\" name=\\\"city\\\" class=\\\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\\\"></div><div class=\\\"mb-4\\\"><label for=\\\"postal_code\\\" class=\\\"text-white block mb-2\\\">Postal Code:</label><input id=\\\"postal_code\\\" name=\\\"postal_code\\\" class=\\\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\\\"></div><div class=\\\"mb-4\\\"><label for=\\\"country\\\" class=\\\"text-white block mb-2\\\">Country:</label><input id=\\\"country\\\" name=\\\"country\\\" class=\\\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\\\"></div><button type=\\\"submit\\\" class=\\\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\\\">Register</button>\", 9);\nconst _hoisted_10 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", {\n    onSubmit: _cache[0] || (_cache[0] = _withModifiers((...args) => $options.register && $options.register(...args), [\"prevent\"])),\n    class: \"max-w-md mx-auto mt-8\"\n  }, [..._hoisted_10], 32 /* NEED_HYDRATION */);\n}","map":{"version":3,"names":["_hoisted_1","_createElementBlock","onSubmit","_cache","_withModifiers","args","$options","register","class"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\components\\RegisterView.vue"],"sourcesContent":["<template>\r\n    <form @submit.prevent=\"register\" class=\"max-w-md mx-auto mt-8\">\r\n        <div class=\"mb-4\">\r\n            <label for=\"first_name\" class=\"text-white block mb-2\">First Name:</label>\r\n            <input id=\"first_name\" name=\"first_name\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\">\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n            <label for=\"last_name\" class=\"text-white block mb-2\">Last Name:</label>\r\n            <input id=\"last_name\" name=\"last_name\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\">\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n            <label for=\"email\" class=\"text-white block mb-2\">Email:</label>\r\n            <input id=\"email\" name=\"email\" type=\"email\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\">\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n            <label for=\"password\" class=\"text-white block mb-2\">Password:</label>\r\n            <input id=\"password\" name=\"password\" type=\"password\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\">\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n            <label for=\"street\" class=\"text-white block mb-2\">Street:</label>\r\n            <input id=\"street\" name=\"street\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\">\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n        <label for=\"city\" class=\"text-white block mb-2\">City:</label>\r\n        <input id=\"city\" name=\"city\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\">\r\n        </div>\r\n\r\n        <div class=\"mb-4\">\r\n            <label for=\"postal_code\" class=\"text-white block mb-2\">Postal Code:</label>\r\n            <input id=\"postal_code\" name=\"postal_code\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\">\r\n        </div>\r\n        \r\n        <div class=\"mb-4\">\r\n            <label for=\"country\" class=\"text-white block mb-2\">Country:</label>\r\n            <input id=\"country\" name=\"country\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\">\r\n        </div>\r\n      <button type=\"submit\" class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Register</button>\r\n    </form>\r\n  </template>\r\n  \r\n  <script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // Your data properties go here\r\n      username: '',\r\n      password: '',\r\n      street: '',\r\n      city: '',\r\n      postal_code: '',\r\n      country: '',\r\n      error: null,\r\n    };\r\n  },\r\n  methods: {\r\n    async register() {\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:5000/register', {\r\n          username: this.username,\r\n          password: this.password,\r\n          street: this.street,\r\n          city: this.city,\r\n          postal_code: this.postal_code,\r\n          country: this.country,\r\n        });\r\n\r\n        // Handle successful registration\r\n        console.log('Registration successful:', response.data.message);\r\n        // You can also redirect to a login page or perform other actions\r\n      } catch (error) {\r\n        // Handle registration error\r\n        console.error('Registration failed:', error.response.data.message);\r\n        this.error = error.response.data.message; // Set an error property for display\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n  "],"mappings":";;qBAEQA,UAGM,C;;uBAJVC,mBAAA,CAyCO;IAzCAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAAEG,KAAK,EAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}