{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      order: null\n    };\n  },\n  methods: {\n    fetchOrderDetails(orderId) {\n      axios.get(`http://127.0.0.1:5004/get-order/${orderId}`, {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(response => {\n        console.log('API Response:', response.data);\n        this.order = response.data;\n      }).catch(error => {\n        console.error('Error fetching order details:', error);\n      });\n    }\n  },\n  created() {\n    // Get order ID from route param\n    const orderId = this.$route.params.orderId;\n    this.fetchOrderDetails(orderId);\n  }\n};","map":{"version":3,"names":["axios","data","order","methods","fetchOrderDetails","orderId","get","headers","Authorization","$store","state","authToken","then","response","console","log","catch","error","created","$route","params"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\OrderSuccessView.vue"],"sourcesContent":["<!-- OrderSuccessView.vue -->\r\n\r\n<template>\r\n    <div class=\"bg-gray-900 text-white min-h-screen py-6 sm:py-8 lg:py-12\">\r\n      <div class=\"max-w-md mx-auto mt-8 bg-green-500 p-6 rounded-md shadow-md\">\r\n        <h1 class=\"text-3xl font-semibold mb-4 text-white\">Your order has been placed successfully!</h1>\r\n  \r\n        <div v-if=\"order\">\r\n          <div class=\"mt-6\">\r\n            <h2 class=\"text-xl font-semibold mb-2 text-white\">Order Details:</h2>\r\n            <p class=\"text-white\"><span class=\"font-bold\">Order ID:</span> #{{ order.id }}</p>\r\n            <p class=\"text-white\"><span class=\"font-bold\">Date:</span> {{ order.date_created }}</p>\r\n            <p class=\"text-white\"><span class=\"font-bold\">Total Amount:</span> ${{ order.total_price }}</p>\r\n          </div>\r\n  \r\n          <div class=\"mt-8\">\r\n            <p class=\"text-white\">Thank you for your purchase. We appreciate your business.</p>\r\n  \r\n            <!-- Additional order details -->\r\n            <p class=\"text-white mt-4\">\r\n              To complete your order, please transfer the total amount of ${{ order.total_price }} to the following German IBAN within 7 days:\r\n            </p>\r\n  \r\n            <p class=\"text-white font-bold mt-2\">DE89370400440532013000</p>\r\n  \r\n            <p class=\"text-white mt-4\">\r\n              Please include your order ID (#{{ order.id }}) as the payment reference.\r\n            </p>\r\n  \r\n            <p class=\"text-white mt-4\">\r\n              Your order will be processed and shipped once we receive the payment. If we don't receive the payment within 7 days, the order will be canceled.\r\n            </p>\r\n          </div>\r\n        </div>\r\n  \r\n        <div v-else>\r\n          <p class=\"text-white\">Order details not available.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n<script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        order: null,\r\n      };\r\n    },\r\n  \r\n    methods: {\r\n      fetchOrderDetails(orderId) {\r\n        axios.get(`http://127.0.0.1:5004/get-order/${orderId}`, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.state.authToken}`,\r\n          },\r\n        })\r\n          .then(response => {\r\n            console.log('API Response:', response.data);\r\n            this.order = response.data;\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching order details:', error);\r\n          });\r\n      },\r\n    },\r\n  \r\n    created() {\r\n      // Get order ID from route param\r\n      const orderId = this.$route.params.orderId; \r\n      this.fetchOrderDetails(orderId);\r\n    }\r\n  };\r\n</script>\r\n\r\n  "],"mappings":"AA4CE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACPC,iBAAiBA,CAACC,OAAO,EAAE;MACzBL,KAAK,CAACM,GAAG,CAAE,mCAAkCD,OAAQ,EAAC,EAAE;QACtDE,OAAO,EAAE;UACPC,aAAa,EAAG,UAAS,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,SAAU;QACvD;MACF,CAAC,EACEC,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAACZ,IAAI,CAAC;QAC3C,IAAI,CAACC,KAAI,GAAIW,QAAQ,CAACZ,IAAI;MAC5B,CAAC,EACAe,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN;EACF,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA,MAAMb,OAAM,GAAI,IAAI,CAACc,MAAM,CAACC,MAAM,CAACf,OAAO;IAC1C,IAAI,CAACD,iBAAiB,CAACC,OAAO,CAAC;EACjC;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}