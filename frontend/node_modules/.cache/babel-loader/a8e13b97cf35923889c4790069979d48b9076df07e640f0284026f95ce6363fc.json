{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      email: '',\n      password: '',\n      successMessage: '',\n      errorMessage: '' // Add new property for error message\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/login', {\n          username: this.email,\n          password: this.password\n        }, {\n          withCredentials: true\n        });\n\n        // Dispatch the 'login' action to store the authentication token in Vuex\n        this.$store.dispatch('login', response.data.access_token);\n\n        // Save the token to localStorage\n        localStorage.setItem('authToken', response.data.access_token);\n\n        // Set success message and display success modal\n        this.successMessage = 'Login successful';\n        this.showModal('success-modal');\n\n        // Redirect to the profile page after a brief delay (adjust as needed)\n        setTimeout(() => {\n          this.$router.push('/');\n        }, 1000);\n      } catch (error) {\n        // Handle login error\n        console.error('Login failed:', error.response.data.message);\n        // Set an error property for display and show error modal\n        this.errorMessage = 'Login failed. Please check your credentials and try again.';\n        this.showModal('error-modal');\n      }\n    },\n    showModal(className) {\n      // Display the modal with the given class name\n      const modal = document.querySelector(`.${className}`);\n      if (modal) {\n        modal.style.display = 'block';\n      }\n    },\n    closeModal() {\n      // Close the modal\n      const modals = document.querySelectorAll('.modal');\n      modals.forEach(modal => {\n        modal.style.display = 'none';\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","email","password","successMessage","errorMessage","methods","login","response","post","username","withCredentials","$store","dispatch","access_token","localStorage","setItem","showModal","setTimeout","$router","push","error","console","message","className","modal","document","querySelector","style","display","closeModal","modals","querySelectorAll","forEach"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\components\\LoginView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-gray-900 text-white min-h-screen py-6 sm:py-8 lg:py-12\">\r\n    <form @submit.prevent=\"login\" class=\"max-w-md mx-auto mt-8\">\r\n      <div class=\"mb-4\">\r\n        <label for=\"email\" class=\"text-white block mb-2\">Email:</label>\r\n        <input v-model=\"email\" id=\"email\" name=\"email\" type=\"email\" class=\"rounded-md px-4 py-2 w-full bg-gray-900 text-white\">\r\n      </div>\r\n      \r\n      <div class=\"mb-4\">\r\n        <label for=\"password\" class=\"text-white block mb-2\">Password:</label>\r\n        <input v-model=\"password\" id=\"password\" name=\"password\" type=\"password\" class=\"rounded-md px-4 py-2 w-full bg-gray-900 text-white\">\r\n      </div>\r\n\r\n      <button type=\"submit\" class=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">Login</button>\r\n      \r\n      <!-- Modal for success message -->\r\n      <div v-if=\"successMessage\" class=\"modal\">\r\n        <div class=\"modal-content success-modal\">\r\n          <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n          <p>{{ successMessage }}</p>\r\n          <p>ðŸŽ‰ Welcome back! You're now logged in.</p>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Modal for error message -->\r\n      <div v-if=\"errorMessage\" class=\"modal\">\r\n        <div class=\"modal-content error-modal\">\r\n          <span class=\"close\" @click=\"closeModal\">&times;</span>\r\n          <p>{{ errorMessage }}</p>\r\n          <p>ðŸ˜“ Oops! It seems there was an issue with your credentials. Please try again.</p>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n/* Add custom styling for modals */\r\n.modal {\r\n  display: none;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-content {\r\n  background-color: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n}\r\n\r\n.success-modal {\r\n  background-color: #4CAF50;\r\n  color: #fff;\r\n}\r\n\r\n.error-modal {\r\n  background-color: #FF5733;\r\n  color: #fff;\r\n}\r\n\r\n.close {\r\n  color: #aaa;\r\n  float: right;\r\n  font-size: 28px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n}\r\n</style>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      email: '',\r\n      password: '',\r\n      successMessage: '',\r\n      errorMessage: '', // Add new property for error message\r\n    };\r\n  },\r\n  methods: {\r\n    async login() {\r\n      try {\r\n        const response = await axios.post('http://127.0.0.1:5000/login', {\r\n          username: this.email,\r\n          password: this.password,\r\n        }, { withCredentials: true });\r\n\r\n        // Dispatch the 'login' action to store the authentication token in Vuex\r\n        this.$store.dispatch('login', response.data.access_token);\r\n\r\n        // Save the token to localStorage\r\n        localStorage.setItem('authToken', response.data.access_token);\r\n\r\n        // Set success message and display success modal\r\n        this.successMessage = 'Login successful';\r\n        this.showModal('success-modal');\r\n\r\n        // Redirect to the profile page after a brief delay (adjust as needed)\r\n        setTimeout(() => {\r\n          this.$router.push('/');\r\n        }, 1000);\r\n\r\n      } catch (error) {\r\n        // Handle login error\r\n        console.error('Login failed:', error.response.data.message);\r\n        // Set an error property for display and show error modal\r\n        this.errorMessage = 'Login failed. Please check your credentials and try again.';\r\n        this.showModal('error-modal');\r\n      }\r\n    },\r\n    showModal(className) {\r\n      // Display the modal with the given class name\r\n      const modal = document.querySelector(`.${className}`);\r\n      if (modal) {\r\n        modal.style.display = 'block';\r\n      }\r\n    },\r\n    closeModal() {\r\n      // Close the modal\r\n      const modals = document.querySelectorAll('.modal');\r\n      modals.forEach((modal) => {\r\n        modal.style.display = 'none';\r\n      });\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AA8EA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMR,KAAK,CAACS,IAAI,CAAC,6BAA6B,EAAE;UAC/DC,QAAQ,EAAE,IAAI,CAACR,KAAK;UACpBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,EAAE;UAAEQ,eAAe,EAAE;QAAK,CAAC,CAAC;;QAE7B;QACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,OAAO,EAAEL,QAAQ,CAACP,IAAI,CAACa,YAAY,CAAC;;QAEzD;QACAC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAER,QAAQ,CAACP,IAAI,CAACa,YAAY,CAAC;;QAE7D;QACA,IAAI,CAACV,cAAa,GAAI,kBAAkB;QACxC,IAAI,CAACa,SAAS,CAAC,eAAe,CAAC;;QAE/B;QACAC,UAAU,CAAC,MAAM;UACf,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC;MAEV,EAAE,OAAOC,KAAK,EAAE;QACd;QACAC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACb,QAAQ,CAACP,IAAI,CAACsB,OAAO,CAAC;QAC3D;QACA,IAAI,CAAClB,YAAW,GAAI,4DAA4D;QAChF,IAAI,CAACY,SAAS,CAAC,aAAa,CAAC;MAC/B;IACF,CAAC;IACDA,SAASA,CAACO,SAAS,EAAE;MACnB;MACA,MAAMC,KAAI,GAAIC,QAAQ,CAACC,aAAa,CAAE,IAAGH,SAAU,EAAC,CAAC;MACrD,IAAIC,KAAK,EAAE;QACTA,KAAK,CAACG,KAAK,CAACC,OAAM,GAAI,OAAO;MAC/B;IACF,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX;MACA,MAAMC,MAAK,GAAIL,QAAQ,CAACM,gBAAgB,CAAC,QAAQ,CAAC;MAClDD,MAAM,CAACE,OAAO,CAAER,KAAK,IAAK;QACxBA,KAAK,CAACG,KAAK,CAACC,OAAM,GAAI,MAAM;MAC9B,CAAC,CAAC;IACJ;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}