{"ast":null,"code":"import axios from 'axios';\nimport { mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      photo: {},\n      selectedSize: 'S',\n      selectedQuantity: 1,\n      sizeOptions: [{\n        label: 'Small (20 cm) - $20',\n        value: 'S'\n      }, {\n        label: 'Medium (40 cm) - $40',\n        value: 'M'\n      }, {\n        label: 'Large (60 cm) - $60',\n        value: 'L'\n      }]\n    };\n  },\n  computed: {\n    ...mapState(['authToken']) // Map the 'authToken' state to a computed property\n  },\n  mounted() {\n    this.fetchPhotoDetails();\n  },\n  methods: {\n    // ... your existing methods ...\n\n    addToCart() {\n      const photoId = this.photo.id;\n      // Use this.authToken to access the token\n      const token = this.authToken;\n      axios.post(`http://localhost:5002/add-to-cart/${photoId}`, {\n        size: this.selectedSize,\n        quantity: this.selectedQuantity\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(() => {\n        // Refresh cart data\n        this.$store.dispatch('fetchCart');\n        alert('Added to cart!');\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","mapState","data","photo","selectedSize","selectedQuantity","sizeOptions","label","value","computed","mounted","fetchPhotoDetails","methods","addToCart","photoId","id","token","authToken","post","size","quantity","headers","Authorization","then","$store","dispatch","alert","catch","error","console","log"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\ImageDetailView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-custom-color dark:bg-gray-800 min-h-screen py-8\">\r\n    <div class=\"photo-detail flex justify-center items-center\">\r\n      <div class=\"w-1/2 pr-8\">\r\n        <img :src=\"photo.url\" :alt=\"photo.name\" class=\"w-2/3 h-auto rounded-md\">\r\n      </div>\r\n\r\n      <div class=\"w-1/2 pl-8\">\r\n        <h1 class=\"text-2xl font-bold mb-4\">{{ photo.name }}</h1>\r\n\r\n        <form @submit.prevent=\"addToCart\" class=\"mt-4\">\r\n          <label for=\"size\" class=\"block text-sm font-medium text-gray-700\">Select Size:</label>\r\n          <select v-model=\"selectedSize\" name=\"size\" id=\"size\" class=\"mt-1 p-2 border rounded-md w-full\">\r\n            <option v-for=\"sizeOption in sizeOptions\" :key=\"sizeOption.value\" :value=\"sizeOption.value\">\r\n              {{ sizeOption.label }}\r\n            </option>\r\n          </select>\r\n\r\n          <label for=\"quantity\" class=\"block text-sm font-medium text-gray-700 mt-4\">Quantity:</label>\r\n          <input v-model=\"selectedQuantity\" type=\"number\" name=\"quantity\" min=\"1\" class=\"mt-1 p-2 border rounded-md w-full\">\r\n\r\n          <button type=\"submit\" class=\"mt-4 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">\r\n            Add to Cart\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      photo: {},\r\n      selectedSize: 'S',\r\n      selectedQuantity: 1,\r\n      sizeOptions: [\r\n        { label: 'Small (20 cm) - $20', value: 'S' },\r\n        { label: 'Medium (40 cm) - $40', value: 'M' },\r\n        { label: 'Large (60 cm) - $60', value: 'L' },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['authToken']), // Map the 'authToken' state to a computed property\r\n  },\r\n  mounted() {\r\n    this.fetchPhotoDetails();\r\n  },\r\n  methods: {\r\n    // ... your existing methods ...\r\n\r\n    addToCart() {\r\n      const photoId = this.photo.id;\r\n      // Use this.authToken to access the token\r\n      const token = this.authToken;\r\n\r\n      axios.post(`http://localhost:5002/add-to-cart/${photoId}`, {\r\n        size: this.selectedSize,\r\n        quantity: this.selectedQuantity\r\n      }, { headers: { Authorization: `Bearer ${token}` } })\r\n        .then(() => {\r\n          // Refresh cart data\r\n          this.$store.dispatch('fetchCart');\r\n          alert('Added to cart!');\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  },\r\n};\r\n</script>"],"mappings":"AAgCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,CAAC;MACTC,YAAY,EAAE,GAAG;MACjBC,gBAAgB,EAAE,CAAC;MACnBC,WAAW,EAAE,CACX;QAAEC,KAAK,EAAE,qBAAqB;QAAEC,KAAK,EAAE;MAAI,CAAC,EAC5C;QAAED,KAAK,EAAE,sBAAsB;QAAEC,KAAK,EAAE;MAAI,CAAC,EAC7C;QAAED,KAAK,EAAE,qBAAqB;QAAEC,KAAK,EAAE;MAAI,CAAC;IAEhD,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAE;EAC9B,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACP;;IAEAC,SAASA,CAAA,EAAG;MACV,MAAMC,OAAM,GAAI,IAAI,CAACX,KAAK,CAACY,EAAE;MAC7B;MACA,MAAMC,KAAI,GAAI,IAAI,CAACC,SAAS;MAE5BjB,KAAK,CAACkB,IAAI,CAAE,qCAAoCJ,OAAQ,EAAC,EAAE;QACzDK,IAAI,EAAE,IAAI,CAACf,YAAY;QACvBgB,QAAQ,EAAE,IAAI,CAACf;MACjB,CAAC,EAAE;QAAEgB,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASN,KAAM;QAAE;MAAE,CAAC,EACjDO,IAAI,CAAC,MAAM;QACV;QACA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,WAAW,CAAC;QACjCC,KAAK,CAAC,gBAAgB,CAAC;MACzB,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}