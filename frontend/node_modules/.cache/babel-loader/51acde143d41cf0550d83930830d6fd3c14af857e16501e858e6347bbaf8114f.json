{"ast":null,"code":"import axios from 'axios';\nimport { mapState } from 'vuex';\nexport default {\n  data() {\n    return {\n      photo: {},\n      selectedSize: 'S',\n      selectedQuantity: 1,\n      sizeOptions: [{\n        label: 'Small (20 cm) - $20',\n        value: 'S'\n      }, {\n        label: 'Medium (40 cm) - $40',\n        value: 'M'\n      }, {\n        label: 'Large (60 cm) - $60',\n        value: 'L'\n      }]\n    };\n  },\n  computed: {\n    ...mapState(['authToken']) // Map the 'authToken' state to a computed property\n  },\n  mounted() {\n    this.fetchPhotoDetails();\n  },\n  methods: {\n    fetchPhotoDetails() {\n      const photoId = this.$route.params.id;\n      axios.get(`http://127.0.0.1:5001/photos/${photoId}`).then(response => {\n        this.photo = {\n          ...response.data.photo,\n          name: response.data.photo.name,\n          url: `http://127.0.0.1:5001/${response.data.photo.image || ''}`\n        };\n      }).catch(error => {\n        console.error('Error fetching photo details:', error);\n      });\n    },\n    addToCart() {\n      const photoId = this.photo.id;\n      // Use this.authToken to access the token\n      const token = this.authToken;\n      axios.post(`http://localhost:5002/add-to-cart/${photoId}`, {\n        photoId: this.photo.id,\n        size: this.selectedSize,\n        quantity: this.selectedQuantity,\n        name: this.photo.name,\n        url: this.photo.url\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        withCredentials: true\n      }).then(() => {\n        // Refresh cart data\n        this.$store.dispatch('fetchCart');\n        alert('Added to cart!');\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","mapState","data","photo","selectedSize","selectedQuantity","sizeOptions","label","value","computed","mounted","fetchPhotoDetails","methods","photoId","$route","params","id","get","then","response","name","url","image","catch","error","console","addToCart","token","authToken","post","size","quantity","headers","Authorization","withCredentials","$store","dispatch","alert","log"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\ImageDetailView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-gray-900 text-white min-h-screen py-6 sm:py-8 lg:py-12\">\r\n    <div class=\"photo-detail flex justify-center items-center px-4\">\r\n      <div class=\"w-1/2 pr-8\">\r\n        <img :src=\"photo.url\" :alt=\"photo.name\" class=\"w-2/3 h-auto rounded-md\">\r\n      </div>\r\n\r\n      <!-- Wrap the form in a div and reduce its size by 50% -->\r\n      <div class=\"w-1/4 pl-8\"> <!-- Adjusted width to 1/4 -->\r\n        <h1 class=\"text-2xl font-bold mb-2\">{{ photo.name }}</h1>\r\n\r\n        <form @submit.prevent=\"addToCart\" class=\"mt-2\">\r\n          <label for=\"size\" class=\"block text-sm font-medium text-gray-700\">Select Size:</label>\r\n          <select v-model=\"selectedSize\" name=\"size\" id=\"size\" class=\"mt-1 p-2 border rounded-md w-full\">\r\n            <option v-for=\"sizeOption in sizeOptions\" :key=\"sizeOption.value\" :value=\"sizeOption.value\">\r\n              {{ sizeOption.label }}\r\n            </option>\r\n          </select>\r\n\r\n          <label for=\"quantity\" class=\"block text-sm font-medium text-gray-700 mt-2\">Quantity:</label>\r\n          <input v-model=\"selectedQuantity\" type=\"number\" name=\"quantity\" min=\"1\" class=\"mt-1 p-2 border rounded-md w-full\">\r\n\r\n          <button type=\"submit\" class=\"mt-2 bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">\r\n            Add to Cart\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <br>\r\n  </div>\r\n  <footer class=\"py-4 bg-gray-800 flex flex-col justify-center items-center\">\r\n    <div class=\"flex justify-center items-center mb-4\">\r\n      <a class=\"hover:text-gray-300\" href=\"https://www.instagram.com/marvin.trvl\">Contact Us</a>\r\n      <span class=\"mx-2 text-gray-400\">|</span>\r\n      <a class=\"hover:text-gray-300\" href=\"https://www.instagram.com/marvin.trvl\">Impressum</a>\r\n      <span class=\"mx-2 text-gray-400\">|</span>\r\n      <a class=\"hover:text-gray-300\" href=\"https://www.instagram.com/marvin.trvl\">Instagram</a>\r\n    </div>\r\n    <div class=\"text-gray-400\">&copy; 2023 SnapStock Licensing & Prints</div>\r\n  </footer>\r\n</template>\r\n\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapState } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      photo: {},\r\n      selectedSize: 'S',\r\n      selectedQuantity: 1,\r\n      sizeOptions: [\r\n        { label: 'Small (20 cm) - $20', value: 'S' },\r\n        { label: 'Medium (40 cm) - $40', value: 'M' },\r\n        { label: 'Large (60 cm) - $60', value: 'L' },\r\n      ],\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState(['authToken']), // Map the 'authToken' state to a computed property\r\n  },\r\n  mounted() {\r\n    this.fetchPhotoDetails();\r\n  },\r\n  methods: {\r\n    fetchPhotoDetails() {\r\n      const photoId = this.$route.params.id;\r\n      axios.get(`http://127.0.0.1:5001/photos/${photoId}`)\r\n        .then(response => {\r\n          this.photo = {\r\n            ...response.data.photo,\r\n            name: response.data.photo.name,\r\n            url: `http://127.0.0.1:5001/${response.data.photo.image || ''}`\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching photo details:', error);\r\n        });\r\n    },\r\n    addToCart() {\r\n      const photoId = this.photo.id;\r\n      // Use this.authToken to access the token\r\n      const token = this.authToken;\r\n\r\n      axios.post(`http://localhost:5002/add-to-cart/${photoId}`, {\r\n        photoId: this.photo.id,\r\n        size: this.selectedSize,\r\n        quantity: this.selectedQuantity,\r\n        name: this.photo.name,\r\n        url: this.photo.url,\r\n      }, \r\n      { headers: { Authorization: `Bearer ${token}` },\r\n        withCredentials: true, \r\n      }\r\n    )\r\n        .then(() => {\r\n          // Refresh cart data\r\n          this.$store.dispatch('fetchCart');\r\n          alert('Added to cart!');\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"AA4CA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,QAAO,QAAS,MAAM;AAE/B,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,CAAC,CAAC;MACTC,YAAY,EAAE,GAAG;MACjBC,gBAAgB,EAAE,CAAC;MACnBC,WAAW,EAAE,CACX;QAAEC,KAAK,EAAE,qBAAqB;QAAEC,KAAK,EAAE;MAAI,CAAC,EAC5C;QAAED,KAAK,EAAE,sBAAsB;QAAEC,KAAK,EAAE;MAAI,CAAC,EAC7C;QAAED,KAAK,EAAE,qBAAqB;QAAEC,KAAK,EAAE;MAAI,CAAC;IAEhD,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGR,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAE;EAC9B,CAAC;EACDS,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,iBAAiB,CAAC,CAAC;EAC1B,CAAC;EACDC,OAAO,EAAE;IACPD,iBAAiBA,CAAA,EAAG;MAClB,MAAME,OAAM,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;MACrChB,KAAK,CAACiB,GAAG,CAAE,gCAA+BJ,OAAQ,EAAC,EAChDK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAAChB,KAAI,GAAI;UACX,GAAGgB,QAAQ,CAACjB,IAAI,CAACC,KAAK;UACtBiB,IAAI,EAAED,QAAQ,CAACjB,IAAI,CAACC,KAAK,CAACiB,IAAI;UAC9BC,GAAG,EAAG,yBAAwBF,QAAQ,CAACjB,IAAI,CAACC,KAAK,CAACmB,KAAI,IAAK,EAAG;QAChE,CAAC;MACH,CAAC,EACAC,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACvD,CAAC,CAAC;IACN,CAAC;IACDE,SAASA,CAAA,EAAG;MACV,MAAMb,OAAM,GAAI,IAAI,CAACV,KAAK,CAACa,EAAE;MAC7B;MACA,MAAMW,KAAI,GAAI,IAAI,CAACC,SAAS;MAE5B5B,KAAK,CAAC6B,IAAI,CAAE,qCAAoChB,OAAQ,EAAC,EAAE;QACzDA,OAAO,EAAE,IAAI,CAACV,KAAK,CAACa,EAAE;QACtBc,IAAI,EAAE,IAAI,CAAC1B,YAAY;QACvB2B,QAAQ,EAAE,IAAI,CAAC1B,gBAAgB;QAC/Be,IAAI,EAAE,IAAI,CAACjB,KAAK,CAACiB,IAAI;QACrBC,GAAG,EAAE,IAAI,CAAClB,KAAK,CAACkB;MAClB,CAAC,EACD;QAAEW,OAAO,EAAE;UAAEC,aAAa,EAAG,UAASN,KAAM;QAAE,CAAC;QAC7CO,eAAe,EAAE;MACnB,CACF,EACKhB,IAAI,CAAC,MAAM;QACV;QACA,IAAI,CAACiB,MAAM,CAACC,QAAQ,CAAC,WAAW,CAAC;QACjCC,KAAK,CAAC,gBAAgB,CAAC;MACzB,CAAC,EACAd,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACa,GAAG,CAACd,KAAK,CAAC;MACpB,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}