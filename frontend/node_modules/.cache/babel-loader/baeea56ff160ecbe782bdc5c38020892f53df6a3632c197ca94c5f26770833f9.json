{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      cartItems: [],\n      cartTotal: 0,\n      user: {},\n      bankInfo: '',\n      editMode: false,\n      editField: ''\n    };\n  },\n  methods: {\n    fetchCartItems() {\n      axios.get('http://127.0.0.1:5002/get-cart', {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(response => {\n        // Log raw API response \n        console.log('API Response:', response.data);\n        const cartItems = response.data.cart_items;\n        console.log('First Item:', cartItems[0]);\n        const firstItem = cartItems[0];\n        console.log('First item photo ID:', firstItem.photo_id);\n\n        // Log cart items separately \n        console.log('Cart Items:', cartItems);\n        this.cartItems = cartItems;\n        this.cartTotal = response.data.total_price;\n      }).catch(error => {\n        console.error('Error fetching cart items:', error);\n      });\n    },\n    fetchUserInfo() {\n      axios.get('http://127.0.0.1:5000/profile', {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(response => {\n        this.user = response.data;\n      }).catch(error => {\n        console.error('Error fetching user information:', error);\n      });\n    },\n    placeOrder() {\n      const orderDetails = this.cartItems.map(item => {\n        if (item.photo) {\n          return {\n            quantity: item.quantity,\n            size: item.photo.size,\n            photo_name: item.photo.name,\n            photo_id: item.photo_id,\n            // Corrected from item.photo_id\n            subtotal: item.photo.price\n          };\n        } else {\n          console.error('Item photo is undefined:', item);\n          return null;\n        }\n      }).filter(orderDetail => orderDetail !== null);\n      const orderData = {\n        total_price: this.cartTotal,\n        shipping_address: `${this.user.street}, ${this.user.postal_code}, ${this.user.city}, ${this.user.country}`,\n        bank_info: this.bankInfo,\n        order_details: orderDetails,\n        first_name: this.user.first_name,\n        last_name: this.user.last_name\n      };\n      axios.post('http://127.0.0.1:5004/place-order', orderData, {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(response => {\n        console.log('Order placed successfully:', response.data);\n        this.$router.push({\n          name: 'OrderSuccessView',\n          params: {\n            orderId: response.data.order_id\n          }\n        });\n        // Clear the user's cart after placing the order\n        axios.delete('http://127.0.0.1:5002/clear-cart', {\n          headers: {\n            Authorization: `Bearer ${this.$store.state.authToken}`\n          }\n        }).then(clearResponse => {\n          console.log('Cart cleared successfully:', clearResponse.data);\n          // Optionally, you can navigate to a thank you page or perform other actions\n        }).catch(clearError => {\n          console.error('Error clearing cart:', clearError);\n          // Handle error while clearing the cart\n        });\n      }).catch(error => {\n        console.error('Error placing order:', error);\n        // Handle error, show a message to the user, etc.\n      });\n    },\n    toggleEditMode(field) {\n      this.editMode = !this.editMode;\n      if (this.editMode) {\n        this.editField = field;\n      } else {\n        this.editField = '';\n      }\n    },\n    saveChanges() {\n      // Perform any necessary validation or additional logic before saving\n      // For simplicity, assuming the changes are valid and updating the user object directly\n      this.editMode = false;\n      this.editField = '';\n    }\n  },\n  created() {\n    this.fetchCartItems();\n    this.fetchUserInfo();\n  }\n};","map":{"version":3,"names":["axios","data","cartItems","cartTotal","user","bankInfo","editMode","editField","methods","fetchCartItems","get","headers","Authorization","$store","state","authToken","then","response","console","log","cart_items","firstItem","photo_id","total_price","catch","error","fetchUserInfo","placeOrder","orderDetails","map","item","photo","quantity","size","photo_name","name","subtotal","price","filter","orderDetail","orderData","shipping_address","street","postal_code","city","country","bank_info","order_details","first_name","last_name","post","$router","push","params","orderId","order_id","delete","clearResponse","clearError","toggleEditMode","field","saveChanges","created"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\CheckoutView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-gray-900 text-white min-h-screen py-6 sm:py-8 lg:py-12\">\r\n    <div class=\"max-w-md mx-auto mt-8\">\r\n      <h1 class=\"text-3xl font-bold mb-4\">Checkout</h1>\r\n\r\n      <div class=\"mb-4\">\r\n        <h2 class=\"text-2xl font-bold mb-2\">Order Details</h2>\r\n        <table class=\"border-collapse border border-gray-800 w-full\">\r\n          <thead>\r\n            <tr class=\"bg-gray-800 text-white\">\r\n              <th class=\"py-2 px-4\">Photo</th>\r\n              <th class=\"py-2 px-4\">Size</th>\r\n              <th class=\"py-2 px-4\">Quantity</th>\r\n              <th class=\"py-2 px-4\">Subtotal</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"item in cartItems\" :key=\"item.id\">\r\n              <td class=\"py-2 px-4\">{{ item.photo.name }}</td>\r\n              <td class=\"py-2 px-4\">{{ item.photo.size }}</td>\r\n              <td class=\"py-2 px-4\">{{ item.quantity }}</td>\r\n              <td class=\"py-2 px-4\">${{ item.photo.price }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <p class=\"text-xl font-bold mb-2\">Total: ${{ cartTotal }}</p>\r\n\r\n      <div class=\"mb-4\">\r\n        <div class=\"border border-gray-800 p-4\">\r\n          <h2 class=\"text-2xl font-bold mb-2\">Shipping Information</h2>\r\n          <!-- Display user's shipping information -->\r\n          <div v-if=\"!editMode\">\r\n            <p>\r\n              <span class=\"font-bold\">First Name:</span> {{ user.first_name }}\r\n              <span @click=\"toggleEditMode('first_name')\" class=\"cursor-pointer text-blue-500 ml-2\">✏️</span>\r\n            </p>\r\n            <p>\r\n              <span class=\"font-bold\">Last Name:</span> {{ user.last_name }}\r\n              <span @click=\"toggleEditMode('last_name')\" class=\"cursor-pointer text-blue-500 ml-2\">✏️</span>\r\n            </p>\r\n            <p><span class=\"font-bold\">Street:</span> {{ user.street }} <span @click=\"toggleEditMode('street')\" class=\"cursor-pointer text-blue-500 ml-2\">✏️</span></p>\r\n            <p><span class=\"font-bold\">Postal Code:</span> {{ user.postal_code }} <span @click=\"toggleEditMode('postal_code')\" class=\"cursor-pointer text-blue-500 ml-2\">✏️</span></p>\r\n            <p><span class=\"font-bold\">City:</span> {{ user.city }} <span @click=\"toggleEditMode('city')\" class=\"cursor-pointer text-blue-500 ml-2\">✏️</span></p>\r\n            <p><span class=\"font-bold\">Country:</span> {{ user.country }} <span @click=\"toggleEditMode('country')\" class=\"cursor-pointer text-blue-500 ml-2\">✏️</span></p>\r\n          </div>\r\n          <div v-else>\r\n            <!-- Input fields for editing -->\r\n            <label v-if=\"editField === 'name'\">Name:</label>\r\n            <input v-if=\"editField === 'name'\" v-model=\"user.first_name\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\" />\r\n            <label v-if=\"editField === 'street'\">Street:</label>\r\n            <input v-if=\"editField === 'street'\" v-model=\"user.street\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\" />\r\n            <label v-if=\"editField === 'postal_code'\">Postal Code:</label>\r\n            <input v-if=\"editField === 'postal_code'\" v-model=\"user.postal_code\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\" />\r\n            <label v-if=\"editField === 'city'\">City:</label>\r\n            <input v-if=\"editField === 'city'\" v-model=\"user.city\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\" />\r\n            <label v-if=\"editField === 'country'\">Country:</label>\r\n            <input v-if=\"editField === 'country'\" v-model=\"user.country\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white\" />\r\n            <button @click=\"saveChanges\" class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Save</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"mb-4\">\r\n        <div class=\"border border-gray-800 p-4\">\r\n          <h2 class=\"text-2xl font-bold mb-2\">Bank Information</h2>\r\n          <!-- Allow the user to enter bank information -->\r\n          <form @submit.prevent=\"placeOrder\">\r\n            <label for=\"bankInfo\" class=\"block text-white mb-2\">Enter Bank Information:</label>\r\n            <textarea v-model=\"bankInfo\" name=\"bankInfo\" class=\"rounded-md px-4 py-2 w-full bg-gray-800 text-white resize-none\" maxlength=\"30\" rows=\"1\" required></textarea>\r\n            <button type=\"submit\" class=\"bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded\">Place Order</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <br>\r\n  </div>\r\n  <footer class=\"py-4 bg-gray-800 flex flex-col justify-center items-center\">\r\n    <div class=\"flex justify-center items-center mb-4\">\r\n      <a class=\"hover:text-gray-300\" href=\"https://www.instagram.com/marvin.trvl\">Contact Us</a>\r\n      <span class=\"mx-2 text-gray-400\">|</span>\r\n      <a class=\"hover:text-gray-300\" href=\"https://www.instagram.com/marvin.trvl\">Impressum</a>\r\n      <span class=\"mx-2 text-gray-400\">|</span>\r\n      <a class=\"hover:text-gray-300\" href=\"https://www.instagram.com/marvin.trvl\">Instagram</a>\r\n    </div>\r\n    <div class=\"text-gray-400\">&copy; 2023 SnapStock Licensing & Prints</div>\r\n  </footer>\r\n</template>\r\n\r\n\r\n<script>\r\n  import axios from 'axios';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        cartItems: [],\r\n        cartTotal: 0,\r\n        user: {},\r\n        bankInfo: '',\r\n        editMode: false,\r\n        editField: '',\r\n      };\r\n    },\r\n    methods: {\r\n      fetchCartItems() {\r\n        axios.get('http://127.0.0.1:5002/get-cart', {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.state.authToken}`,\r\n          },\r\n        })\r\n        .then(response => {\r\n          // Log raw API response \r\n          console.log('API Response:', response.data);\r\n\r\n          const cartItems = response.data.cart_items;\r\n          console.log('First Item:', cartItems[0]);\r\n          const firstItem = cartItems[0];\r\n          console.log('First item photo ID:', firstItem.photo_id);\r\n\r\n          // Log cart items separately \r\n          console.log('Cart Items:', cartItems);\r\n\r\n          this.cartItems = cartItems;\r\n          this.cartTotal = response.data.total_price;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching cart items:', error);\r\n        });\r\n      },\r\n      fetchUserInfo() {\r\n        axios.get('http://127.0.0.1:5000/profile', {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.state.authToken}`,\r\n          },\r\n        })\r\n        .then(response => {\r\n          this.user = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user information:', error);\r\n        });\r\n      },\r\n      placeOrder() {\r\n        const orderDetails = this.cartItems.map(item => {\r\n          if (item.photo) {\r\n            return {\r\n              quantity: item.quantity,\r\n              size: item.photo.size,\r\n              photo_name: item.photo.name,\r\n              photo_id: item.photo_id,  // Corrected from item.photo_id\r\n              subtotal: item.photo.price,\r\n            };\r\n          } else {\r\n            console.error('Item photo is undefined:', item);\r\n            return null;\r\n          }\r\n        }).filter(orderDetail => orderDetail !== null);\r\n\r\n        const orderData = {\r\n          total_price: this.cartTotal,\r\n          shipping_address: `${this.user.street}, ${this.user.postal_code}, ${this.user.city}, ${this.user.country}`,\r\n          bank_info: this.bankInfo,\r\n          order_details: orderDetails,\r\n          first_name: this.user.first_name,\r\n          last_name: this.user.last_name,\r\n        };\r\n\r\n        axios.post('http://127.0.0.1:5004/place-order', orderData, {\r\n          headers: {\r\n            Authorization: `Bearer ${this.$store.state.authToken}`,\r\n          },\r\n        })\r\n        .then(response => {\r\n          console.log('Order placed successfully:', response.data);\r\n\r\n          this.$router.push({\r\n            name: 'OrderSuccessView',\r\n            params: { orderId: response.data.order_id }\r\n          });\r\n          // Clear the user's cart after placing the order\r\n          axios.delete('http://127.0.0.1:5002/clear-cart', {\r\n            headers: {\r\n              Authorization: `Bearer ${this.$store.state.authToken}`,\r\n            },\r\n          })\r\n          .then(clearResponse => {\r\n            console.log('Cart cleared successfully:', clearResponse.data);\r\n            // Optionally, you can navigate to a thank you page or perform other actions\r\n          })\r\n          .catch(clearError => {\r\n            console.error('Error clearing cart:', clearError);\r\n            // Handle error while clearing the cart\r\n          });\r\n        })\r\n        .catch(error => {\r\n          console.error('Error placing order:', error);\r\n          // Handle error, show a message to the user, etc.\r\n        });\r\n      },\r\n      toggleEditMode(field) {\r\n        this.editMode = !this.editMode;\r\n        if (this.editMode) {\r\n          this.editField = field;\r\n        } else {\r\n          this.editField = '';\r\n        }\r\n      },\r\n      saveChanges() {\r\n        // Perform any necessary validation or additional logic before saving\r\n        // For simplicity, assuming the changes are valid and updating the user object directly\r\n        this.editMode = false;\r\n        this.editField = '';\r\n      },\r\n    },\r\n    created() {\r\n      this.fetchCartItems();\r\n      this.fetchUserInfo();\r\n    },\r\n  };\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}