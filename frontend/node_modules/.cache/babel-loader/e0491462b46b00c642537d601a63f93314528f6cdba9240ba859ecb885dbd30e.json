{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      cartItems: []\n    };\n  },\n  computed: {\n    cartTotal() {\n      return this.cartItemsWithSubtotal.reduce((total, item) => total + (item.subtotal || 0), 0);\n    },\n    cartItemsWithSubtotal() {\n      return this.cartItems.map(item => ({\n        ...item,\n        subtotal: item.quantity * item.price\n      }));\n    }\n  },\n  methods: {\n    fetchCartItems() {\n      const token = this.$store.state.authToken;\n      axios.get('http://127.0.0.1:5002/get-cart', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        this.cartItems = response.data.cart_items.map(item => ({\n          ...item,\n          photo: {\n            ...item.photo,\n            price: parseFloat(item.photo.price)\n          }\n        }));\n\n        // Fetch photo URLs for each item in the cart\n        const photoServiceUrl = 'http://127.0.0.1:5001/photos';\n        this.cartItems.forEach(item => {\n          // Fetch the photo URL for the current item\n          axios.get(`${photoServiceUrl}/${item.photo.id}`).then(response => {\n            // Update the image URL with the fetched URL\n            item.photo.image = response.data.image;\n          }).catch(error => {\n            // Handle error\n            console.error('Error fetching photo URL:', error);\n          });\n        });\n      }).catch(error => {\n        console.error('Error fetching cart items:', error);\n      });\n    },\n    emptyCart() {\n      // Implement logic to empty the cart\n      axios.delete('http://127.0.0.1:5002/clear-cart', {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(() => {\n        this.fetchCartItems(); // Refresh the cart after clearing\n        alert('Cart emptied successfully!');\n      }).catch(error => {\n        console.error('Error emptying cart:', error);\n      });\n    },\n    updateQuantity(itemId) {\n      // Implement logic to update the quantity\n      const form = document.getElementById(`update-form-${itemId}`);\n      const quantity = form.elements[\"quantity\"];\n\n      // Send a request to update the quantity\n      axios.put(`http://127.0.0.1:5002/update-cart-item/${itemId}`, {\n        quantity: parseInt(quantity.value)\n      }, {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(() => {\n        this.fetchCartItems(); // Refresh the cart after updating\n      }).catch(error => {\n        console.error('Error updating quantity:', error);\n      });\n    },\n    deleteItem(itemId) {\n      // Implement logic to delete an item from the cart\n      axios.delete(`http://127.0.0.1:5002/delete-cart-item/${itemId}`, {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(() => {\n        this.fetchCartItems(); // Refresh the cart after deleting\n        alert('Item deleted from the cart successfully!');\n      }).catch(error => {\n        console.error('Error deleting item:', error);\n      });\n    }\n  },\n  created() {\n    // Fetch the cart items\n    this.fetchCartItems();\n  }\n};","map":{"version":3,"names":["axios","data","cartItems","computed","cartTotal","cartItemsWithSubtotal","reduce","total","item","subtotal","map","quantity","price","methods","fetchCartItems","token","$store","state","authToken","get","headers","Authorization","then","response","cart_items","photo","parseFloat","photoServiceUrl","forEach","id","image","catch","error","console","emptyCart","delete","alert","updateQuantity","itemId","form","document","getElementById","elements","put","parseInt","value","deleteItem","created"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\ShoppingCartView.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-3xl mx-auto mt-8\">\r\n    <h1 class=\"text-3xl font-semibold mb-6\">Your Shopping Cart</h1>\r\n\r\n    <form @submit.prevent=\"emptyCart\">\r\n      <button type=\"submit\" class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">\r\n        Empty Cart\r\n      </button>\r\n    </form>\r\n\r\n    <table class=\"w-full border-collapse border border-gray-300 mt-4\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"p-2 border\">Item</th>\r\n          <th class=\"p-2 border\">Size</th>\r\n          <th class=\"p-2 border\">Quantity</th>\r\n          <th class=\"p-2 border\">Subtotal</th>\r\n          <th class=\"p-2 border\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"item in cartItemsWithSubtotal\" :key=\"item.id\" class=\"border-b\">\r\n          <td class=\"p-2 border\">\r\n            <div class=\"flex items-center\">\r\n              <div>\r\n                <p class=\"font-bold\">{{ item.photo.name }}</p>\r\n                <p>{{ item.photo.title }}</p>\r\n              </div>\r\n              <img :src=\"item.photo.url\" :alt=\"item.name\" class=\"w-40 h-40 object-contain rounded-md ml-4\">\r\n            </div>\r\n          </td>\r\n          <td class=\"p-2 border\">{{ item.size }}</td>\r\n          <td class=\"p-2 border\">\r\n            <form :id=\"'update-form-' + item.id\" @submit.prevent=\"updateQuantity(item.id)\">\r\n              <input type=\"number\" v-model=\"item.quantity\" min=\"1\">\r\n            </form>\r\n          </td>\r\n          <td class=\"p-2 border\">${{ item.subtotal }}</td>\r\n          <td class=\"p-2 border\">\r\n            <button @click=\"deleteItem(item.id)\" class=\"text-red-500 hover:text-red-700\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p class=\"mt-4\">Total: ${{ cartTotal }}</p>\r\n    <br>\r\n    <router-link to=\"/checkout\" class=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\r\n      Proceed to Checkout\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n    };\r\n  },\r\n  computed: {\r\n    cartTotal() {\r\n      return this.cartItemsWithSubtotal.reduce((total, item) => total + (item.subtotal || 0), 0);\r\n    },\r\n    cartItemsWithSubtotal() {\r\n      return this.cartItems.map(item => ({\r\n        ...item,\r\n        subtotal: item.quantity * item.price,\r\n      }));\r\n    },\r\n  },\r\n  methods: {\r\n  fetchCartItems() {\r\n    const token = this.$store.state.authToken;\r\n\r\n    axios.get('http://127.0.0.1:5002/get-cart', { headers: { Authorization: `Bearer ${token}` } })\r\n      .then(response => {\r\n        this.cartItems = response.data.cart_items.map(item => ({\r\n          ...item,\r\n          photo: {\r\n            ...item.photo,\r\n            price: parseFloat(item.photo.price),\r\n          },\r\n        }));\r\n\r\n        // Fetch photo URLs for each item in the cart\r\n        const photoServiceUrl = 'http://127.0.0.1:5001/photos';\r\n\r\n        this.cartItems.forEach(item => {\r\n          // Fetch the photo URL for the current item\r\n          axios.get(`${photoServiceUrl}/${item.photo.id}`)\r\n            .then(response => {\r\n              // Update the image URL with the fetched URL\r\n              item.photo.image = response.data.image;\r\n            })\r\n            .catch(error => {\r\n              // Handle error\r\n              console.error('Error fetching photo URL:', error);\r\n            });\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching cart items:', error);\r\n      });\r\n  },\r\n    emptyCart() {\r\n      // Implement logic to empty the cart\r\n      axios.delete('http://127.0.0.1:5002/clear-cart', {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(() => {\r\n          this.fetchCartItems(); // Refresh the cart after clearing\r\n          alert('Cart emptied successfully!');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error emptying cart:', error);\r\n        });\r\n    },\r\n    updateQuantity(itemId) {\r\n      // Implement logic to update the quantity\r\n      const form = document.getElementById(`update-form-${itemId}`);\r\n      const quantity = form.elements[\"quantity\"];\r\n\r\n      // Send a request to update the quantity\r\n      axios.put(`http://127.0.0.1:5002/update-cart-item/${itemId}`, { quantity: parseInt(quantity.value) }, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(() => {\r\n          this.fetchCartItems(); // Refresh the cart after updating\r\n        })\r\n        .catch(error => {\r\n          console.error('Error updating quantity:', error);\r\n        });\r\n    },\r\n    deleteItem(itemId) {\r\n      // Implement logic to delete an item from the cart\r\n      axios.delete(`http://127.0.0.1:5002/delete-cart-item/${itemId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(() => {\r\n          this.fetchCartItems(); // Refresh the cart after deleting\r\n          alert('Item deleted from the cart successfully!');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting item:', error);\r\n        });\r\n    },\r\n  },\r\n  created() {\r\n    // Fetch the cart items\r\n    this.fetchCartItems();\r\n  },\r\n};\r\n</script>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}