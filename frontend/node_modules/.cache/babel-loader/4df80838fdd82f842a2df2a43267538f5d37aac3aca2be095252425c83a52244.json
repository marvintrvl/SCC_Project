{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      user: {}\n    };\n  },\n  created() {\n    // Fetch user profile data from the backend\n    this.fetchUserProfile();\n  },\n  methods: {\n    fetchUserProfile() {\n      // Make API request to Flask backend for user profile\n      axios.get('http://127.0.0.1:5000/profile', {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(response => {\n        this.user = response.data;\n      }).catch(error => {\n        console.error('Error fetching user profile data:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","user","created","fetchUserProfile","methods","get","headers","Authorization","$store","state","authToken","then","response","catch","error","console"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\ProfileView.vue"],"sourcesContent":["<template>\r\n  <div class=\"container mx-auto py-8\">\r\n    <div class=\"max-w-md mx-auto mt-8 bg-gray-800 p-6 rounded-md shadow-md\">\r\n      <h1 class=\"text-3xl font-semibold mb-6 text-white\">Welcome, {{ user.username }}!</h1>\r\n\r\n      <div class=\"mb-8\">\r\n        <h2 class=\"text-xl font-semibold mb-4 text-white\">Your Profile Details:</h2>\r\n        <div class=\"grid grid-cols-2 gap-4\">\r\n          <div>\r\n            <p class=\"text-gray-400\">Email:</p>\r\n            <p class=\"text-white\">{{ user.username }}</p>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-gray-400\">Street:</p>\r\n            <p class=\"text-white\">{{ user.street }}</p>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-gray-400\">City:</p>\r\n            <p class=\"text-white\">{{ user.city }}</p>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-gray-400\">Postal Code:</p>\r\n            <p class=\"text-white\">{{ user.postal_code }}</p>\r\n          </div>\r\n          <div>\r\n            <p class=\"text-gray-400\">Country:</p>\r\n            <p class=\"text-white\">{{ user.country }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <h2 class=\"text-xl font-semibold mb-4 text-white\">Actions:</h2>\r\n        <ul>\r\n          <router-link to=\"/change-email\" class=\"text-blue-500\"><li>Change Email</li></router-link>\r\n          <router-link to=\"/change-password\" class=\"text-blue-500\"><li>Change Password</li></router-link>\r\n          <router-link to=\"/change-name\" class=\"text-blue-500\"><li>Change Name</li></router-link>\r\n          <router-link to=\"/change-address\" class=\"text-blue-500\"><li>Change Address</li></router-link>\r\n          <router-link to=\"/view-orders\" class=\"text-blue-500\"><li>View Orders</li></router-link>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: {},\r\n    };\r\n  },\r\n  created() {\r\n    // Fetch user profile data from the backend\r\n    this.fetchUserProfile();\r\n  },\r\n  methods: {\r\n    fetchUserProfile() {\r\n      // Make API request to Flask backend for user profile\r\n      axios.get('http://127.0.0.1:5000/profile', {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(response => {\r\n          this.user = response.data;\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching user profile data:', error);\r\n        });\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n"],"mappings":"AA8CA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,gBAAgB,CAAC,CAAC;EACzB,CAAC;EACDC,OAAO,EAAE;IACPD,gBAAgBA,CAAA,EAAG;MACjB;MACAJ,KAAK,CAACM,GAAG,CAAC,+BAA+B,EAAE;QACzCC,OAAO,EAAE;UACPC,aAAa,EAAG,UAAS,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,SAAU;QACvD;MACF,CAAC,EACEC,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACX,IAAG,GAAIW,QAAQ,CAACZ,IAAI;MAC3B,CAAC,EACAa,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;MAC3D,CAAC,CAAC;IACN;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}