{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      cartItems: []\n    };\n  },\n  computed: {\n    cartTotal() {\n      return this.cartItems.reduce((total, item) => total + item.photo.price, 0);\n    }\n  },\n  methods: {\n    fetchCartItems() {\n      axios.get('http://127.0.0.1:5002/get-cart', {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(response => {\n        this.cartItems = response.data.cart_items;\n        console.log(this.cartItems);\n      }).catch(error => {\n        console.error('Error fetching cart items:', error);\n      });\n    },\n    emptyCart() {\n      axios.delete('http://127.0.0.1:5002/clear-cart', {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(() => {\n        this.cartItems = [];\n        alert('Cart emptied successfully!');\n      }).catch(error => {\n        console.error('Error emptying cart:', error);\n      });\n    },\n    async updateCartQuantity(item) {\n      const form = document.getElementById(`update-form-${item.id}`);\n      const newQty = parseInt(form.elements[0].value);\n      try {\n        // Create a copy of the cart items array\n        const updatedCartItems = [...this.$store.state.cartItems];\n\n        // Find the index of the item in the array\n        const updatedItemIndex = updatedCartItems.findIndex(it => it.id === item.id);\n\n        // Check if the item exists in the array\n        if (updatedItemIndex === -1) {\n          console.error('Item not found in cart:', item.id);\n          return;\n        }\n\n        // Update the quantity in the copy\n        updatedCartItems[updatedItemIndex].quantity = newQty;\n\n        // Send the updated cart items to the server\n        const response = await axios.put(`http://localhost:5002/update-cart-item/${item.id}`, {\n          quantity: newQty\n        }, {\n          headers: {\n            Authorization: `Bearer ${this.$store.state.authToken}`\n          }\n        });\n\n        // Check if response is defined before accessing data\n        if (response && response.data) {\n          // Update the cart items in the store with the updated items\n          this.$store.dispatch('updateCart', updatedCartItems);\n          console.log('Updated successfully');\n        } else {\n          console.error('Error updating cart item: No response data');\n        }\n      } catch (error) {\n        console.error('Error updating cart item:', error.response ? error.response.data.message : error.message);\n      }\n    },\n    deleteItem(itemId) {\n      axios.delete(`http://127.0.0.1:5002/delete-cart-item/${itemId}`, {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(() => {\n        // Remove the item directly from the Vue data\n        this.cartItems = this.cartItems.filter(item => item.id !== itemId);\n        alert('Item deleted from the cart successfully!');\n      }).catch(error => {\n        console.error('Error deleting item:', error);\n      });\n    }\n  },\n  created() {\n    this.fetchCartItems();\n  }\n};","map":{"version":3,"names":["axios","data","cartItems","computed","cartTotal","reduce","total","item","photo","price","methods","fetchCartItems","get","headers","Authorization","$store","state","authToken","then","response","cart_items","console","log","catch","error","emptyCart","delete","alert","updateCartQuantity","form","document","getElementById","id","newQty","parseInt","elements","value","updatedCartItems","updatedItemIndex","findIndex","it","quantity","put","dispatch","message","deleteItem","itemId","filter","created"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\ShoppingCartView.vue"],"sourcesContent":["<template>\r\n  <div class=\"bg-gray-900 text-white min-h-screen py-6 sm:py-8 lg:py-12\">\r\n    <div class=\"max-w-3xl mx-auto mt-8\">\r\n      <h1 class=\"text-3xl font-semibold mb-6\">Your Shopping Cart</h1>\r\n\r\n      <form @submit.prevent=\"emptyCart\">\r\n        <button type=\"submit\" class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">\r\n          Empty Cart\r\n        </button>\r\n      </form>\r\n\r\n      <table class=\"w-full border-collapse border border-gray-300 mt-4\">\r\n        <thead>\r\n          <tr>\r\n            <th class=\"p-2 border\">Item</th>\r\n            <th class=\"p-2 border\">Size</th>\r\n            <th class=\"p-2 border\">Quantity</th>\r\n            <th class=\"p-2 border\">Subtotal</th>\r\n            <th class=\"p-2 border\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"item in cartItems\" :key=\"item.id\" class=\"border-b\">\r\n            <td class=\"p-2 border\">\r\n              <div class=\"flex items-center\">\r\n                <div>\r\n                  <p class=\"font-bold\">{{ item.photo.name }}</p>\r\n                  <p>{{ item.photo.title }}</p>\r\n                </div>\r\n                <img :src=\"item.photo.url\" :alt=\"item.name\" class=\"w-40 h-40 object-contain rounded-md ml-4\">\r\n              </div>\r\n            </td>\r\n            <td class=\"p-2 border\">{{ item.photo.size }}</td>\r\n            <td class=\"p-2 border\">\r\n              <form :id=\"'update-form-' + item.id\" @submit.prevent=\"updateCartQuantity(item)\">\r\n                <input type=\"number\" v-model=\"item.quantity\" min=\"1\">\r\n              </form>\r\n            </td>\r\n            <td class=\"p-2 border\">${{ item.photo.price }}</td>\r\n            <td class=\"p-2 border\">\r\n              <button @click=\"deleteItem(item.id)\" class=\"text-red-500 hover:text-red-700\">Delete</button>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <p class=\"mt-4\">Total: ${{ cartTotal }}</p>\r\n      <br>\r\n      <router-link to=\"/checkout\" class=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\r\n        Proceed to Checkout\r\n      </router-link>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n    };\r\n  },\r\n  computed: {\r\n    cartTotal() {\r\n      return this.cartItems.reduce((total, item) => total + item.photo.price, 0);\r\n    },\r\n  },\r\n  methods: {\r\n    fetchCartItems() {\r\n      axios.get('http://127.0.0.1:5002/get-cart', {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(response => {\r\n          this.cartItems = response.data.cart_items;\r\n          console.log(this.cartItems);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching cart items:', error);\r\n        });\r\n    },\r\n    emptyCart() {\r\n      axios.delete('http://127.0.0.1:5002/clear-cart', {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(() => {\r\n          this.cartItems = [];\r\n          alert('Cart emptied successfully!');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error emptying cart:', error);\r\n        });\r\n    },\r\n    async updateCartQuantity(item) {\r\n  const form = document.getElementById(`update-form-${item.id}`);\r\n  const newQty = parseInt(form.elements[0].value);\r\n\r\n  try {\r\n    // Create a copy of the cart items array\r\n    const updatedCartItems = [...this.$store.state.cartItems];\r\n\r\n    // Find the index of the item in the array\r\n    const updatedItemIndex = updatedCartItems.findIndex(it => it.id === item.id);\r\n\r\n    // Check if the item exists in the array\r\n    if (updatedItemIndex === -1) {\r\n      console.error('Item not found in cart:', item.id);\r\n      return;\r\n    }\r\n\r\n    // Update the quantity in the copy\r\n    updatedCartItems[updatedItemIndex].quantity = newQty;\r\n\r\n    // Send the updated cart items to the server\r\n    const response = await axios.put(`http://localhost:5002/update-cart-item/${item.id}`, {\r\n      quantity: newQty,\r\n    }, {\r\n      headers: {\r\n        Authorization: `Bearer ${this.$store.state.authToken}`,\r\n      },\r\n    });\r\n\r\n    // Check if response is defined before accessing data\r\n    if (response && response.data) {\r\n      // Update the cart items in the store with the updated items\r\n      this.$store.dispatch('updateCart', updatedCartItems);\r\n\r\n      console.log('Updated successfully');\r\n    } else {\r\n      console.error('Error updating cart item: No response data');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error updating cart item:', error.response ? error.response.data.message : error.message);\r\n  }\r\n},\r\n    deleteItem(itemId) {\r\n      axios.delete(`http://127.0.0.1:5002/delete-cart-item/${itemId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(() => {\r\n          // Remove the item directly from the Vue data\r\n          this.cartItems = this.cartItems.filter(item => item.id !== itemId);\r\n          alert('Item deleted from the cart successfully!');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting item:', error);\r\n        });\r\n    },\r\n  },\r\n  created() {\r\n    this.fetchCartItems();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}