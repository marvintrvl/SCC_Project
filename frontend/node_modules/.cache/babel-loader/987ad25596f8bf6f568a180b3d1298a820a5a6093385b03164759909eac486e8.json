{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      cartItems: []\n    };\n  },\n  computed: {\n    cartTotal() {\n      return this.cartItems.reduce((total, item) => total + item.photo.price, 0);\n    }\n  },\n  methods: {\n    fetchCartItems() {\n      axios.get('http://127.0.0.1:5002/get-cart', {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(response => {\n        this.cartItems = response.data.cart_items;\n        console.log(this.cartItems);\n      }).catch(error => {\n        console.error('Error fetching cart items:', error);\n      });\n    },\n    emptyCart() {\n      // Implement logic to empty the cart\n      axios.delete('http://127.0.0.1:5002/clear-cart', {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(() => {\n        this.fetchCartItems(); // Refresh the cart after clearing\n        alert('Cart emptied successfully!');\n      }).catch(error => {\n        console.error('Error emptying cart:', error);\n      });\n    },\n    updateQuantity(item) {\n      // Create the update form element dynamically\n      const updateFormElement = document.createElement('form');\n      updateFormElement.id = `update-form-${item.id}`;\n\n      // Create an input field for the quantity\n      const quantityInput = document.createElement('input');\n      quantityInput.type = 'number';\n      quantityInput.value = item.quantity;\n      quantityInput.min = '1';\n\n      // Declare 'qty' outside the event listener\n      let qty;\n      quantityInput.addEventListener('change', () => {\n        // Update the qty variable\n        qty = quantityInput.value;\n      });\n      updateFormElement.appendChild(quantityInput);\n\n      // Update the cart item quantity\n      axios.put(`http://127.0.0.1:5002/update-cart-item/${item.id}`, {\n        headers: {\n          Authorization: `Bearer ${$store.state.authToken}`\n        },\n        quantity: parseInt(qty)\n      }).then(() => {\n        // Refresh cart after update\n        this.fetchCartItems();\n      });\n    },\n    deleteItem(itemId) {\n      // Implement logic to delete an item from the cart\n      axios.delete(`http://127.0.0.1:5002/delete-cart-item/${itemId}`, {\n        headers: {\n          Authorization: `Bearer ${this.$store.state.authToken}`\n        }\n      }).then(() => {\n        this.fetchCartItems(); // Refresh the cart after deleting\n        alert('Item deleted from the cart successfully!');\n      }).catch(error => {\n        console.error('Error deleting item:', error);\n      });\n    }\n  },\n  created() {\n    // Fetch the cart items\n    this.fetchCartItems();\n  }\n};","map":{"version":3,"names":["axios","data","cartItems","computed","cartTotal","reduce","total","item","photo","price","methods","fetchCartItems","get","headers","Authorization","$store","state","authToken","then","response","cart_items","console","log","catch","error","emptyCart","delete","alert","updateQuantity","updateFormElement","document","createElement","id","quantityInput","type","value","quantity","min","qty","addEventListener","appendChild","put","parseInt","deleteItem","itemId","created"],"sources":["C:\\Users\\menzm\\Desktop\\SCC_Project\\frontend\\src\\views\\ShoppingCartView.vue"],"sourcesContent":["<template>\r\n  <div class=\"max-w-3xl mx-auto mt-8\">\r\n    <h1 class=\"text-3xl font-semibold mb-6\">Your Shopping Cart</h1>\r\n\r\n    <form @submit.prevent=\"emptyCart\">\r\n      <button type=\"submit\" class=\"bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\">\r\n        Empty Cart\r\n      </button>\r\n    </form>\r\n\r\n    <table class=\"w-full border-collapse border border-gray-300 mt-4\">\r\n      <thead>\r\n        <tr>\r\n          <th class=\"p-2 border\">Item</th>\r\n          <th class=\"p-2 border\">Size</th>\r\n          <th class=\"p-2 border\">Quantity</th>\r\n          <th class=\"p-2 border\">Subtotal</th>\r\n          <th class=\"p-2 border\">Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"item in cartItems\" :key=\"item.id\" class=\"border-b\">\r\n          <td class=\"p-2 border\">\r\n            <div class=\"flex items-center\">\r\n              <div>\r\n                <p class=\"font-bold\">{{ item.photo.name }}</p>\r\n                <p>{{ item.photo.title }}</p>\r\n              </div>\r\n              <img :src=\"item.photo.url\" :alt=\"item.name\" class=\"w-40 h-40 object-contain rounded-md ml-4\">\r\n            </div>\r\n          </td>\r\n          <td class=\"p-2 border\">{{ item.photo.size }}</td>\r\n          <td class=\"p-2 border\">\r\n            <form :id=\"'update-form-' + item.id\" @submit.prevent=\"updateQuantity(item)\">\r\n              <input type=\"number\" v-model=\"item.quantity\" min=\"1\">\r\n            </form>\r\n          </td>\r\n          <td class=\"p-2 border\">${{ item.photo.price }}</td>\r\n          <td class=\"p-2 border\">\r\n            <button @click=\"deleteItem(item.id)\" class=\"text-red-500 hover:text-red-700\">Delete</button>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n    <p class=\"mt-4\">Total: ${{ cartTotal }}</p>\r\n    <br>\r\n    <router-link to=\"/checkout\" class=\"mt-4 bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded\">\r\n      Proceed to Checkout\r\n    </router-link>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      cartItems: [],\r\n    };\r\n  },\r\n  computed: {\r\n    cartTotal() {\r\n      return this.cartItems.reduce((total, item) => total + item.photo.price, 0);\r\n    },\r\n  },\r\n  methods: {\r\n    fetchCartItems() {\r\n      axios.get('http://127.0.0.1:5002/get-cart', {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(response => {\r\n          this.cartItems = response.data.cart_items;\r\n          console.log(this.cartItems);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching cart items:', error);\r\n        });\r\n    },\r\n    emptyCart() {\r\n      // Implement logic to empty the cart\r\n      axios.delete('http://127.0.0.1:5002/clear-cart', {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(() => {\r\n          this.fetchCartItems(); // Refresh the cart after clearing\r\n          alert('Cart emptied successfully!');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error emptying cart:', error);\r\n        });\r\n    },\r\n    updateQuantity(item) {\r\n      // Create the update form element dynamically\r\n      const updateFormElement = document.createElement('form');\r\n      updateFormElement.id = `update-form-${item.id}`;\r\n\r\n      // Create an input field for the quantity\r\n      const quantityInput = document.createElement('input');\r\n      quantityInput.type = 'number';\r\n      quantityInput.value = item.quantity;\r\n      quantityInput.min = '1';\r\n\r\n      // Declare 'qty' outside the event listener\r\n      let qty;\r\n\r\n      quantityInput.addEventListener('change', () => {\r\n        // Update the qty variable\r\n        qty = quantityInput.value;\r\n      });\r\n      updateFormElement.appendChild(quantityInput);\r\n\r\n      // Update the cart item quantity\r\n      axios.put(`http://127.0.0.1:5002/update-cart-item/${item.id}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${$store.state.authToken}`,\r\n        },\r\n        quantity: parseInt(qty),\r\n      })\r\n        .then(() => {\r\n          // Refresh cart after update\r\n          this.fetchCartItems();\r\n        });\r\n    },\r\n    deleteItem(itemId) {\r\n      // Implement logic to delete an item from the cart\r\n      axios.delete(`http://127.0.0.1:5002/delete-cart-item/${itemId}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${this.$store.state.authToken}`,\r\n        },\r\n      })\r\n        .then(() => {\r\n          this.fetchCartItems(); // Refresh the cart after deleting\r\n          alert('Item deleted from the cart successfully!');\r\n        })\r\n        .catch(error => {\r\n          console.error('Error deleting item:', error);\r\n        });\r\n    },\r\n  },\r\n  created() {\r\n    // Fetch the cart items\r\n    this.fetchCartItems();\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}